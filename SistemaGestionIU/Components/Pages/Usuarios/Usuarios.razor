@inject UsuariosService usuarioAccess
@inject ProductosService productoAccess
@inject VentasService ventaAccess
@inject NavigationManager Navigation

@page "/usuarios/{Id:int}"

<div class="container mt-1 mb-4">
    <div class="row">
        <div class="col-6">
            <h2 class="bi bi-people-fill">   Bienvenido @usuario?.Nombre @usuario?.Apellido</h2>
        </div>
        <div class="col-6 text-end">
            <div class="btn-group" role="group">
                <div>
                    <button class="btn btn-danger ms-3" tyoe="button" @onclick="@(() => EliminarUsuario(Id))">Eliminar usuario</button>
                </div>
                <div>
                    <a href="/usuarios/@usuario?.Id/editar">
                        <button type="button" class="btn btn-secondary ms-3"> Modificar usuario </button>
                    </a>
                </div>
                <div>
                    <NavLink class="btn btn-secondary ms-3" href="">Cerrar sesion</NavLink>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="row justify-content-start">
            <div class="col-md-4">
                <label for="productoSelect" class="form-label">¿Qué productos desea listar?</label>
                <select class="form-select" id="productoSelect" @bind="@selectedValue">
                    <option value="">¿Qué productos desea listar?</option>
                    <option value="todos">Todos los productos.</option>
                    <option value="usuario">Productos cargados por usuario.</option>
                </select>
                <button class="btn btn-outline-primary mt-2" @onclick="GuardarSeleccion">Guardar Selección</button>
            </div>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-6 text-start mt-auto">
            <h6 class="mt-auto"> Listado de productos.</h6>
        </div>
        <div class="col-6 text-end">
            <a href="/@usuario?.Id/productos/new">
                <button type="button" class="btn btn-success ms-1">Agregar productos</button>
            </a>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-12">
            <table class="table table-striped table-secondary"> 
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Descripcion</th>
                        <th scope="col">Costo</th>
                        <th scope="col">Stock</th>
                        <th scope="col">Usuario</th>
                        <th scope="col"></th>
                        <th scope="col"></th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (productosAListar != null)
                    {
                        @foreach (Producto producto in productosAListar)
                        {
                            <tr>
                                <td>@producto.Id</td>
                                <td>@producto.Descripcion</td>
                                <td>@producto.Costo</td>
                                <td>@producto.Stock</td>
                                <td>@producto.Usuario?.Nombre</td>
                                <td>
                                    <a href="/productos/@producto.Id/editar">
                                            <button type="button" class="btn btn-outline-secondary"> Modificar </button>
                                    </a>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-outline-danger" @onclick="@(() => EliminarProducto(@producto.Id))"> Eliminar</button> 
                                </td>
                                <td>
                                    <button type="button" class="btn btn-outline-secondary" @onclick="@(() => AgregarCarrito(@producto))"> Agregar al carrito</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <h5 class="mt-5">No se han listado y/o cargado productos hasta el momento.</h5>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <hr class="my-3 border-top border-secondary">
    <div>
        <button class="btn btn-outline-primary" @onclick="@(() => MostrarCarrito())"> Carro de compra </button>
    </div>
    @if(ok){
        <div class="row mt-3">
            <div class="col-12 text-start mt-auto">
                <h6 class="mt-auto"> Carro de productos </h6>
            </div>
            <div class="col-12 text-start ">
                <textarea id="comentario" class="form-control" rows="1" placeholder="Agregar un comentario sobre la venta"
                          @bind="comentario" style="resize: none;"></textarea>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-12">
                <table class="table table-striped table-secondary">
                    <thead>
                        <tr>
                            <th scope="col">Descripcion</th>
                            <th scope="col">Precio</th>
                            <th scope="col">Stock</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                       
                            @foreach (Producto producto in carrito)
                            {
                                <tr>
                                    <td>@producto.Descripcion</td>
                                    <td>@producto.PrecioVenta </td>
                                    <td>
                                        <!-- Input para seleccionar la cantidad a comprar -->
                                        <input type="number" class="form-control-sm" min="1" max="@producto.Stock" value="1"
                                               @onchange="@(e => CambiarCantidad(producto, e))" />
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-outline-danger" @onclick="@(() => EliminarProductoCarrito(@producto))"> Eliminar</button>
                                    </td>                            
                                </tr>
                            }
                        
                    </tbody>
                </table>
                <button type="button" class="btn btn-success" @onclick="@(() => CrearVenta())" >Ejecutar venta</button>
            </div>
        </div>
    }


    <div class="row mt-3">
        <div class="col-12">
            <div class="btn-group" role="group">
                <div>
                    <a class="btn btn-outline-success" href="/@usuario?.Id/ventas"> Ventas </a> 
                </div>
            </div>
        </div>
    </div>
    
    


</div>


@code {
    [Parameter]
    public int Id { get; set; }

    private Usuario? usuario = new Usuario();

    private List<Producto>? productos = new List<Producto>();

    private List<Producto>? productosAListar = new List<Producto>();

    private List<Producto>? carrito = new List<Producto>();

    private List<Producto>? listaVenta = new List<Producto>();

    private bool ok = false;

    private string comentario { get; set; } = "";

    private string selectedValue = "";

    protected override async Task OnInitializedAsync()
    {
        usuario = await usuarioAccess.ObtenerUsuario(Id);
        productos = await productoAccess.ListarProductos();
    }

    public async Task EliminarUsuario(int id)
    {
        await usuarioAccess.EliminarUsuario(id);
        Navigation.NavigateTo("");
    }

    public async Task EliminarProducto(int id)
    {
        await productoAccess.EliminarProducto(id);
        productos = await productoAccess.ListarProductos();
        productosAListar = productos;
    }

    public async Task AgregarCarrito(Producto producto)
    {
        // Crear una copia del producto al agregarlo al carrito
        carrito.Add(new Producto
            {
                Descripcion = producto.Descripcion,
                Costo = producto.Costo,
                PrecioVenta = producto.PrecioVenta,
                Stock = producto.Stock,
                IdUsuario = producto.IdUsuario,
                Id = producto.Id
            });
        listaVenta.Add(new Producto
            {
                Descripcion = producto.Descripcion,
                Costo = producto.Costo,
                PrecioVenta = producto.PrecioVenta,
                Stock = producto.Stock,
                IdUsuario = producto.IdUsuario,
                Id = producto.Id
            });
    }

    public async Task EliminarProductoCarrito(Producto producto)
    {
        carrito.Remove(producto);
        listaVenta.Remove(producto);
    }
    private async Task CambiarCantidad(Producto producto, ChangeEventArgs e)
    {
        int nuevaCantidad = int.Parse(e.Value.ToString());
        listaVenta.FirstOrDefault(p => p.Id == producto.Id).Stock = nuevaCantidad;
    }

    private void MostrarCarrito()
    {
        if (ok) ok = false;
        else ok = true;
    }

    public async Task GuardarSeleccion()
    {
        if (selectedValue.Equals(""))
        {
            productosAListar = [];
        }
        else if (selectedValue.Equals("todos"))
        {
            productosAListar = productos;
        }
        else
        {
            productosAListar = productos.Where(p => p.IdUsuario == Id).ToList();
        }
    }

    public async Task CrearVenta()
    {
        Venta ventaNueva = new Venta
        {
            Comentario = comentario,
            Productos = listaVenta.Select(p => new Producto
            {
                Descripcion = p.Descripcion,
                Costo = p.Costo,
                PrecioVenta = p.PrecioVenta,
                Stock = p.Stock,
                IdUsuario = p.IdUsuario
            }).ToList(),
            IdUsuario = usuario.Id
        };
        await ventaAccess.CrearVenta(ventaNueva);
        comentario = "";
        listaVenta.Clear();
        carrito.Clear();
    }
}
