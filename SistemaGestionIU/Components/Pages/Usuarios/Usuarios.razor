@inject UsuariosService usuarioAccess
@inject ProductosService productoAccess

@page "/usuarios/{Id:int}"

<div class="container mt-1">
    <div class="row">
        <div class="col-6">
            <h2 class="bi bi-people-fill">   Bienvenido @usuario?.Nombre @usuario?.Apellido</h2>
        </div>
        <div class="col-6 text-end">
            <div class="btn-group" role="group">
                <div>
                    <NavLink class="btn btn-danger ms-3" href="">Eliminar usuario</NavLink>
                </div>
                <div>
                    <NavLink class="btn btn-secondary ms-3" href="">Modificar usuario</NavLink>
                </div>
                <div>
                    <NavLink class="btn btn-secondary ms-3" href="">Cerrar sesion</NavLink>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-6 text-start mt-auto">
            <h6 class="mt-auto"> Listado de productos agregados por el usuario.</h6>
        </div>
        <div class="col-6 text-end">
            <NavLink class="btn btn-outline-success ms-3" href="">Agregar productos</NavLink> @*  AGREGA PRODUCTO AL USUARIO *@
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-12">
            <table class="table table-striped table-secondary"> @*  SOLAMENTE LISTA LOS PRODUCTOS CARGADOS POR EL USUARIO *@
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Descripcion</th>
                        <th scope="col">Costo</th>
                        <th scope="col">Precio venta</th>
                        <th scope="col">Stock</th>
                        <th scope="col"></th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (productosUsuario != null)
                    {
                        @foreach (Producto producto in productosUsuario)
                        {
                            <tr>
                                <td>@producto.Id</td>
                                <td>@producto.Descripcion</td>
                                <td>@producto.Costo</td>
                                <td>@producto.PrecioVenta </td>
                                <td>@producto.Stock</td>
                                <td>
                                    <a href="/productos/@producto.Id/editar">
                                            <button type="button" class="btn btn-outline-secondary"> Modificar </button> @*  ELIMINA PRODUCTOS CARGADOS POR EL USUARIO *@
                                    </a>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-outline-danger"> Eliminar</button> @*  ELIMINA PRODUCTOS CARGADOS POR EL USUARIO *@
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <h5 class="mt-5">El usuario no ha cargado producto hasta el momento</h5>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-12 text-start">
            <div class="btn-group" role="group">
                <div>
                    @*  CARGARA VENTAS LLEVANDOSE EN LA URL EL ID DE USUARIO. EN ESA SOLAPA HABRA UN SELECT CON NOMBRE DE PRODUCTOS A VENDER *@
                    <NavLink class="btn btn-outline-success ms-3" href=""> Cargar venta </NavLink> 
                </div>
                <div>
                    @*  EVALUARLO LUEGO *@
                    <NavLink class="btn btn-secondary ms-3" href=""> Listar productos vendidos </NavLink>
                </div>
            </div>
        </div>
    </div>
</div>






@code {
    [Parameter]
    public int Id { get; set; }

    private Usuario? usuario = new Usuario();

    private List<Producto>? productosUsuario = new List<Producto>();

    protected override async Task OnInitializedAsync()
    {
        usuario = await usuarioAccess.ObtenerUsuario(Id);
        // productosUsuario = await productoAccess.ListarProductosUsuario(Id);
    }


}
